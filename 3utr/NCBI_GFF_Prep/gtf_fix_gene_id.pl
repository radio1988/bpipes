# fix gene_id by using a ID2GeneID table
# the GTF input is the gffread output of 'gffread GCF_000002035.6_GRCz11_genomic.ucsc.primary.gff -T -F -O -o GCF_000002035.6_GRCz11_genomic.ucsc.primary.gtf'
# use gene_id or transcript_id in gffread.gtf as key
# use table as database, which is generated by '> perl gff_GeneID2Name.pl GCF_000002035.6_GRCz11_genomic.ucsc.primary.gff'
# will warn if not in database
# output in stdout, which can be piped
use strict; use warnings;

die 'usage: <gtf_fix_gene_id.pl> <ncbi.refseq.gff3.gffread.gtf> <ID2GeneID.txt> ' unless @ARGV == 2;

warn "cmd:", join ("\t", @ARGV), "\n";

open(GTF, $ARGV[0]) or die;
open(TAB, $ARGV[1]) or die;

my%ID2GeneID;
foreach(<TAB>){
	chomp;
	my($a, $b) = split "\t", $_;
	$ID2GeneID{$a}=$b;
}
warn scalar(keys %ID2GeneID), " ID in $ARGV[1]\n";

my$i=0;
foreach(<GTF>) {
	if (/^#/){print; next}
	$i++;

	chomp;

	my$gene_id = "";
	if (/gene_id /){
		if (m/gene_id "([^"]+)"/) {$gene_id = $1} 
		elsif (m/gene_id "([^"]+)";/) {$gene_id = $1}
		else{die "GeneID undefined pattern: ", $_}
	} elsif(/transcript_id /){
		if (m/transcript_id "([^"]+)"/) {$gene_id = $1} 
		elsif (m/transcript_id "([^"]+)";/) {$gene_id = $1}
	} else{
		warn "no GeneID in line: ", $_;
		sleep 1;
		next;
	}

	my $GeneID ="";
	if (exists $ID2GeneID{$gene_id}) {
		$GeneID = $ID2GeneID{$gene_id}
	} else {
		warn "no data for $gene_id\n";
	}
	$_ =~ s/gene_id "[^"]+"/gene_id "$GeneID"/;
	print $_, "\n"; # output
}

