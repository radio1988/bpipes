#!/bin/bash
#BSUB -J "star[1-64]" # same as num-fastqs
#BSUB -R rusage[mem=3000] # 30-40G/num-threads * num-fastqs
#BSUB -n 12
#BSUB -R "span[hosts=1]" # All hosts on the same chassis"
#BSUB -q short
#BSUB -W 4:00 # 20M/hr with 8 cpu
mkdir -p ../star
mkdir -p ../star/log
#BSUB -o ../star/log/star.%J.%I.out
#BSUB -e ../star/log/star.%J.%I.err

## CONFIG
i=$(($LSB_JOBINDEX- 1))

## genome info
genome_idx='/project/umw_mccb/genome/Homo_sapiens/ucsc_hg38_primary/star_idx/'
gtf='/project/umw_mccb/genome/Homo_sapiens/ucsc_hg38_primary/gencode.v29.primary_assembly.annotation.fixed.gtf'

## aligner info
bam_dir=star

## sample info
R1s=(`ls ../fastq/*_R1.fastq.gz`)
#echo 'R1s:' ${#R1s[@]} ${R1s[@]}

## input names
R1=${R1s[$i]}  # without dir_name
R2=${R1/_R1.f/_R2.f}

name=${R1s[$i]}  # without dir_name
name=${name/_R1.fastq.gz/} #need to change
name=${name/..\/fastq\//} #need to change

echo '## STAR ALIGNMENT '
echo 'For' $i $R1 $R2 $name

## Alignment
module load java/1.8.0_77
module load star/2.5.3a
samtools='singularity exec ~/singularity/hand_sandbox/ samtools'
samstat='singularity exec ~/singularity/hand_sandbox samstat'

STAR --runThreadN 12 \
--genomeDir $genome_idx \
--sjdbGTFfile $gtf \
--readFilesCommand zcat \
--readFilesIn $R1 $R2 \
--outFileNamePrefix ../star/$name. \
--outFilterType BySJout \
--outFilterMultimapNmax 20 \
--alignSJoverhangMin 8 \
--alignSJDBoverhangMin 3 \
--outFilterMismatchNmax 999 \
--outFilterMismatchNoverReadLmax 0.05 \
--alignIntronMin 20 \
--alignIntronMax 1000000 \
--alignMatesGapMax 1000000 \
--outFilterIntronMotifs RemoveNoncanonicalUnannotated \
--outSAMstrandField None \
--outSAMtype BAM SortedByCoordinate \
--quantMode GeneCounts \
--outReadsUnmapped Fastx

## post star
bam_file="../${bam_dir}/${name}.Aligned.sortedByCoord.out.bam"
echo '## POST STAR'
echo $i 'bam_file' $bam_file
mkdir -p ../${bam_dir}/idxstats
mkdir -p ../${bam_dir}/flagstat
mkdir -p ../${bam_dir}/stats

$samtools index $bam_file ${bam_file}.bai &&
$samtools idxstats $bam_file > ../$bam_dir/idxstats/${name}.idxstats.txt &
$samtools flagstat $bam_file > ../$bam_dir/flagstat/${name}.flagstat.txt &
$samtools stats $bam_file > ../$bam_dir/stats/${name}.stats.txt &
wait
echo "Stats of bam done"

module purge
bamCoverage='/home/rl44w/.local/bin/bamCoverage'
$bamCoverage --bam $bam_file -o ${bam_file}.cpm.bw \
--numberOfProcessors 10 \
--normalizeUsing CPM  \
--binSize 1 \
--outFileFormat bigwig
echo "bigWig created"
