https://www.evernote.com/l/AOeILIX1-99Ac4-xyDjKZhpQLlITCL1eS9w

#BSUB -J "bowtie2PE[1-4]"  # n jobs in array, batch size
#BSUB -R rusage[mem=800]  # for each cpu
#BSUB -n 12  # n cpu
#BSUB -R "span[hosts=1]" # All hosts on the same chassis"
mkdir -p ./log
#BSUB -o ./log/bowtie2.PE.%J.%I.log
#BSUB -W 4:00
#BSUB -q short
module load bowtie2/2.3.4.3


i=$(($LSB_JOBINDEX- 1))
GENOME=../../TEdata/dm6_transposon


names=(DelMut.PE PointMut.PE FRT19A.CTRL.PE W1118.CTRL.PE)
NAME=${names[$i]}
R1=../../trimmed_fastq/$NAME.R1.fastq.gz
R2=../../trimmed_fastq/$NAME.R2.fastq.gz


echo "command: "


# run1: end-to-end
bowtie2 -p 10 --very-sensitive --seed 1 -x $GENOME -1 $R1 -2 $R2 | samtools view -b -F 4 | samtools sort -@ 2 -m 1G - -o $NAME.bam
samtools index $NAME.bam

# run2: -N 1, local
# very sensitive, -N 1, --local
# -k 1 fixed seed

bowtie2 -p 10 -D 20 -R 3 -N 1 -L 20 -i S,1,0.50 --local \
-k 1 --seed 1 \
-x $GENOME -1 $R1 -2 $R2 | samtools view -b -F 4 | samtools sort -@ 4 -m 1G - -o $NAME.run2.bam
samtools index $NAME.run2.bam

bowtie2 -p 10 -D 20 -R 3 -N 1 -L 20 -i S,1,0.50 --local \
-k 1 --seed 1 \
-x $GENOME -U $R1 | samtools view -b -F 4 | samtools sort -@ 4 -m 1G - -o $NAME.run2.bam
samtools index $NAME.run2.bam


# run3: was not tested, which uses --non-deterministic, that use time stamp rather than seq, quality, seqname, seed for random selection of equaly good matches. Use --non-deterministic when you suspect there are same name, same sequence, same quality score reads in the same library

bowtie2 -p 10 -D 20 -R 3 -N 1 -L 20 -i S,1,0.50 --local \
-k 1 --non-deterministic \
-x $GENOME -1 $R1 -2 $R2 | samtools view -b -F 4 | samtools sort -@ 4 -m 1G - -o $NAME.run3.bam
samtools index $NAME.run3.bam

# Summary
# run2 has more mapped than run1, especially near the end of each transposon element sequence (soft-clipped)
# so use --local
# run3 was not tested

